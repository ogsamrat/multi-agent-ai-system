{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/agents.ts"],"sourcesContent":["export type AgentOutput = any;\n\nexport interface Agent {\n  name: string;\n  execute(input: any): Promise<AgentOutput>;\n}\n\nexport class PlannerAgent implements Agent {\n  name = 'PlannerAgent';\n\n  async execute(goal: string): Promise<string[]> {\n    if (goal.toLowerCase().includes('spacex')) {\n      return [\n        'Find next SpaceX launch',\n        'Check weather at launch location',\n        'Summarize if launch may be delayed',\n      ];\n    }\n    return ['Step 1', 'Step 2', 'Step 3'];\n  }\n}\n\nexport class SpaceXAgent implements Agent {\n  name = 'SpaceXAgent';\n\n  async execute(input: any): Promise<any> {\n    const res = await fetch('https://api.spacexdata.com/v4/launches/upcoming');\n    const data = await res.json();\n    const upcomingLaunches = data.filter((launch: any) => new Date(launch.date_utc) > new Date());\n    upcomingLaunches.sort((a: any, b: any) => new Date(a.date_utc).getTime() - new Date(b.date_utc).getTime());\n    const nextLaunch = upcomingLaunches[0];\n    let launchpadDetails = null;\n    if (nextLaunch && nextLaunch.launchpad) {\n      const launchpadRes = await fetch(`https://api.spacexdata.com/v4/launchpads/${nextLaunch.launchpad}`);\n      if (launchpadRes.ok) {\n        launchpadDetails = await launchpadRes.json();\n      }\n    }\n    return {\n      launch: nextLaunch || null,\n      launchpad: launchpadDetails,\n    };\n  }\n}\n\nexport class WeatherAgent implements Agent {\n  name = 'WeatherAgent';\n\n  constructor() {}\n\n  async execute(input: any): Promise<any> {\n    if (input.error) {\n      return input;\n    }\n    if (!input.launchpad) {\n      throw new Error('No launchpad data provided to WeatherAgent');\n    }\n    const { latitude, longitude } = input.launchpad;\n\n    const weatherUrl = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=true`;\n    let weatherRes;\n    try {\n      weatherRes = await fetch(weatherUrl);\n    } catch (err: unknown) {\n      if (err instanceof Error) {\n        throw new Error('Network error fetching weather data from Open-Meteo: ' + err.message);\n      } else {\n        throw new Error('Network error fetching weather data from Open-Meteo');\n      }\n    }\n    if (!weatherRes.ok) {\n      throw new Error('Failed to fetch weather data from Open-Meteo');\n    }\n    const weatherData = await weatherRes.json();\n\n    return {\n      weather: weatherData,\n      launch: input.launch,\n      launchpad: input.launchpad,\n    };\n  }\n}\n\nexport class SummaryAgent implements Agent {\n  name = 'SummaryAgent';\n\n  async execute(input: any): Promise<string> {\n    if (input.error) {\n      return input.error;\n    }\n    const weather = input.weather;\n    const launch = input.launch;\n    const launchpad = input.launchpad;\n\n    const launchDate = new Date(launch.date_utc);\n    const humanDate = launchDate.toLocaleString(undefined, {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZoneName: 'short',\n    });\n\n    let summary = `Next SpaceX launch: ${launch.name} scheduled at ${humanDate}.\\n`;\n    summary += `Launchpad: ${launchpad.name}, ${launchpad.region}.\\n`;\n\n    if (weather && weather.current_weather) {\n      const temp = weather.current_weather.temperature;\n      const windspeed = weather.current_weather.windspeed;\n      summary += `Current weather at launch site: ${temp}Â°C, wind speed ${windspeed} km/h.`;\n    } else {\n      summary += 'Weather data not available.';\n    }\n\n    return summary;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { PlannerAgent, SpaceXAgent, WeatherAgent, SummaryAgent } from \"@/lib/agents\";\n\nexport default function HomePage() {\n  const [goal, setGoal] = useState(\"\");\n  interface ResultData {\n    summary: string;\n    launch: any;\n    weather: any;\n  }\n\n  const [result, setResult] = React.useState<ResultData | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const openWeatherApiKey = process.env.NEXT_PUBLIC_OPENWEATHER_API_KEY || \"\";\n\n  const runAgents = async (userGoal: string) => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      const planner = new PlannerAgent();\n      const spaceXAgent = new SpaceXAgent();\n      const weatherAgent = new WeatherAgent();\n      const summaryAgent = new SummaryAgent();\n\n      // Planner creates plan steps (not used in this demo but could be extended)\n      const plan = await planner.execute(userGoal);\n\n      // Run SpaceX agent\n      const spaceXData = await spaceXAgent.execute(null);\n\n      // Run Weather agent with SpaceX data\n      const weatherData = await weatherAgent.execute(spaceXData);\n\n      // Run Summary agent with weather and launch data\n      const summaryText = await summaryAgent.execute(weatherData);\n\n      setResult({\n        summary: summaryText,\n        launch: weatherData.launch,\n        weather: weatherData.weather,\n      });\n    } catch (err: any) {\n      setError(err.message || \"Error running agents\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (goal.trim() === \"\") {\n      setError(\"Please enter a goal\");\n      return;\n    }\n    runAgents(goal);\n  };\n\n  return (\n    <main className=\"min-h-screen bg-black text-white flex flex-col items-center justify-center p-4\">\n      <h1 className=\"text-3xl font-bold mb-6\">Multi-Agent AI System</h1>\n      <form onSubmit={handleSubmit} className=\"w-full max-w-xl\">\n        <label htmlFor=\"goal\" className=\"block mb-2 text-lg font-semibold\">\n          Enter your goal:\n        </label>\n        <input\n          id=\"goal\"\n          type=\"text\"\n          value={goal}\n          onChange={(e) => setGoal(e.target.value)}\n          className=\"w-full p-3 rounded border border-gray-600 bg-gray-900 text-white mb-4\"\n          placeholder=\"e.g. Find the next SpaceX launch, check weather, summarize delay\"\n        />\n        <button\n          type=\"submit\"\n          className=\"w-full bg-white text-black font-semibold py-3 rounded hover:bg-gray-200 transition\"\n          disabled={loading}\n        >\n          {loading ? \"Processing...\" : \"Run Agents\"}\n        </button>\n      </form>\n      {error && <p className=\"mt-4 text-red-500\">{error}</p>}\n      {result && (\n        <section className=\"mt-6 p-4 bg-gray-900 rounded max-w-xl whitespace-pre-wrap\">\n          <h2 className=\"text-xl font-semibold mb-2\">Result Summary:</h2>\n          <p>{result.summary}</p>\n          <h3 className=\"text-lg font-semibold mt-4\">Launch Details:</h3>\n          <pre className=\"text-sm overflow-x-auto\">{JSON.stringify(result.launch, null, 2)}</pre>\n          <h3 className=\"text-lg font-semibold mt-4\">Weather Details:</h3>\n          <pre className=\"text-sm overflow-x-auto\">{JSON.stringify(result.weather, null, 2)}</pre>\n        </section>\n      )}\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAOjC,MAAM,CAAC,QAAQ,UAAU,GAAG,qMAAA,CAAA,UAAK,CAAC,QAAQ,CAAoB;IAC9D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,oBAAoB,wEAA+C;IAEzE,MAAM,YAAY,OAAO;QACvB,WAAW;QACX,SAAS;QACT,UAAU;QAEV,IAAI;YACF,MAAM,UAAU,IAAI,oHAAA,CAAA,eAAY;YAChC,MAAM,cAAc,IAAI,oHAAA,CAAA,cAAW;YACnC,MAAM,eAAe,IAAI,oHAAA,CAAA,eAAY;YACrC,MAAM,eAAe,IAAI,oHAAA,CAAA,eAAY;YAErC,2EAA2E;YAC3E,MAAM,OAAO,MAAM,QAAQ,OAAO,CAAC;YAEnC,mBAAmB;YACnB,MAAM,aAAa,MAAM,YAAY,OAAO,CAAC;YAE7C,qCAAqC;YACrC,MAAM,cAAc,MAAM,aAAa,OAAO,CAAC;YAE/C,iDAAiD;YACjD,MAAM,cAAc,MAAM,aAAa,OAAO,CAAC;YAE/C,UAAU;gBACR,SAAS;gBACT,QAAQ,YAAY,MAAM;gBAC1B,SAAS,YAAY,OAAO;YAC9B;QACF,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;QAC1B,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,KAAK,IAAI,OAAO,IAAI;YACtB,SAAS;YACT;QACF;QACA,UAAU;IACZ;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,8OAAC;wBAAM,SAAQ;wBAAO,WAAU;kCAAmC;;;;;;kCAGnE,8OAAC;wBACC,IAAG;wBACH,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;wBACvC,WAAU;wBACV,aAAY;;;;;;kCAEd,8OAAC;wBACC,MAAK;wBACL,WAAU;wBACV,UAAU;kCAET,UAAU,kBAAkB;;;;;;;;;;;;YAGhC,uBAAS,8OAAC;gBAAE,WAAU;0BAAqB;;;;;;YAC3C,wBACC,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,8OAAC;kCAAG,OAAO,OAAO;;;;;;kCAClB,8OAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,8OAAC;wBAAI,WAAU;kCAA2B,KAAK,SAAS,CAAC,OAAO,MAAM,EAAE,MAAM;;;;;;kCAC9E,8OAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,8OAAC;wBAAI,WAAU;kCAA2B,KAAK,SAAS,CAAC,OAAO,OAAO,EAAE,MAAM;;;;;;;;;;;;;;;;;;AAKzF","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}